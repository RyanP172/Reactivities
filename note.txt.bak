1. Create project by dotnet CLI:
	--clear
	--dotnet --info
	--dotnet -h
	--dotnet new -l
	
	--mkdir Reactivities
	--cd Reactivities
	--dotnet new sln
	--ls
	--dotnet new webapi -n API
	--dotnet new classlib -n Application
	--dotnet new classlib -n Domain
	--dotnet new classlib -n Persistence
	
	--dotnet sln add API/API.csproj
	--dotnet sln add Application
	--dotnet sln add Persistence
	--dotnet sln add Domain
	--dotnet sln list
	
	--cd/API
	--dotnet add reference ../Application
	--cd ..
	--cd Application
	--dotnet add reference ../Persistence
	--dotnet add reference ../Domain
	--cd ..
	--cd Persistence
	--dotnet add reference ../Domain
	
2. Generate assesst for run and debug: choose Yes to add/ Or ctr+shift+p type generate
	--exclude obj and bin
	--edit appsettings.Development.json:    "Microsoft": "Information",
											"Microsoft.Hosting.Lifetime": "Information",
											to get more log details
3. Setting up Postman

4. Create Domain files: Activity. These properties inside the class will form columns by using EF Core

5. EF Core create database
	--Object Relational Mapper: Allow using C# code to querry the database.
	--Check the tool to use entity framework: dotnet tool list --global
	--https://www.nuget.org/packages/dotnet-ef/7.0.0
	--Update to the newest version: dotnet tool update --global dotnet-ef --version 7.0.0
	--Create code first EF Migration:
		dotnet ef migrations add InitialCreate -p Persistence -s API
	--Create seed data: Using task to implement Asynchronous Programming i.e. executing operations asynchronously 
	--use the other watch run version:
		dotnet watch --no-hot-reload //work 99% of the cases
	
												